#!/bin/bash

fun_wss_security() {

    # Função para criar o diretório /opt/sshplus e o arquivo /opt/sshplus/sshplus
    function criar_dir_sshplus() {
        sshplus_dir="/opt/sshplus"
        mkdir -p "$sshplus_dir"  # Cria o diretório /opt/sshplus se não existir
        touch "$sshplus_dir/sshplus"  # Cria o arquivo /opt/sshplus/sshplus se não existir
    }

    # Função para fazer o download dos arquivos necessários
    function download_arquivos() {
        dest_dir="/etc/SSHPlus"
        if [ -e "$dest_dir/WebSocket" ] && [ -e "$dest_dir/priv.pem" ] && [ -e "$dest_dir/pub.key" ]; then
            echo "Os arquivos já existem. Nada a fazer."
        else
            WebSocketURL="https://github.com/fleetvpngit/Websocket/raw/main/files/WebSocket"
            PrivKeyURL="https://raw.githubusercontent.com/fleetvpngit/Websocket/main/files/priv.pem"
            PubKeyURL="https://raw.githubusercontent.com/fleetvpngit/Websocket/main/files/pub.key"

            wget -P "$dest_dir" "$WebSocketURL"
            wget -P "$dest_dir" "$PrivKeyURL"
            wget -P "$dest_dir" "$PubKeyURL"
            chmod 777 "$dest_dir/WebSocket"
        fi
    }

    # Função para ativar o proxy com confirmação
    function ativar_proxy() {
        process_name="WSSSECURITY"
        if pgrep -f "$process_name" > /dev/null; then
            echo "O proxy na porta 80 já está em execução com o nome do processo '$process_name'."
        else
            # Verificar se a porta 80 está livre
            if ! lsof -i :80 > /dev/null; then
                echo "A porta 80 está livre. Você tem certeza de que deseja ativar o proxy?"
                read -p "Pressione 'S' para confirmar ou 'N' para voltar: " confirm
                if [ "$confirm" = "S" ] || [ "$confirm" = "s" ]; then
                    read -p "Insira a MENSAGEM: " mensagem
                    screen -dmS "$process_name" /etc/SSHPlus/WebSocket -proxy_port "0.0.0.0:80" -msg "$mensagem"
                    echo "Proxy ATIVADO na porta 80 com a mensagem: $mensagem e o nome do processo '$process_name'."
                else
                    echo "Ativação do proxy cancelada."
                fi
            else
                echo "A porta 80 NÃO ESTÁ LIVRE. Algo já está usando a porta."
            fi
        fi
    }

    # Função para desativar o proxy
    function desativar_proxy() {
        process_name="WSSSECURITY"
        if pgrep -f "$process_name" > /dev/null; then
            pkill -f "$process_name"
            echo "Proxy na porta 80 com o nome do processo '$process_name' foi DESATIVADO."
        else
            echo "Nenhum proxy na porta 80 com o nome do processo '$process_name' em execução."
        fi
    }

    # Função do menu principal
    function menu_security() {
        while true; do
            clear
            echo -e "\E[44;1;37m           WEBSOCKET SECURITY            \E[0m"
            echo ""
            echo -e "\033[1;31m[\033[1;36m1\033[1;31m] \033[1;37m• \033[1;33mATIVAR WSS SECURITY\033[0m"
            echo -e "\033[1;31m[\033[1;36m2\033[1;31m] \033[1;37m• \033[1;33mDESATIVAR WSS SECURITY\033[0m"
            echo -e "\033[1;31m[\033[1;36m3\033[1;31m] \033[1;37m• \033[1;33mVOLTAR\033[0m"
            echo ""
            echo -ne "\033[1;32mEscolha uma opção: \033[1;37m"

            read escolha
            case $escolha in
                1)
                    ativar_proxy
                    read -p "PRESSIONE ENTER PARA CONTINUAR..."
                    ;;
                2)
                    desativar_proxy
                    read -p "PRESSIONE ENTER PARA CONTINUAR..."
                    ;;
                3)
                    echo "SAINDO DO WSS SECURITY."
                    exit
                    ;;
                *)
                    echo "Opção inválida. Tente novamente."
                    read -p "Pressione Enter para continuar..."
                    ;;
            esac
        done
    }

    # Iniciar o download dos arquivos
    download_arquivos

    # Criar o diretório /opt/sshplus e o arquivo /opt/sshplus/sshplus
    criar_dir_sshplus

    # Iniciar o menu principal
    menu_security

}

fun_wss_security
